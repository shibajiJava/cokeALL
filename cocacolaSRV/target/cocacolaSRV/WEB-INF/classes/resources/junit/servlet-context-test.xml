<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
		>

    
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	 <context:property-placeholder location="classpath:resources/junit/jdbc.properties,classpath:resources/junit/mybatis.properties" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<context:component-scan base-package="com.ibm.app.services.util" />
	<context:component-scan base-package="com.ibm.app.services.exception" />
	<context:component-scan base-package="com.ibm.app.services.parsistant" />
	<context:component-scan base-package="com.ibm.app.services.domain" />
	<context:component-scan base-package="com.ibm.app.services.parsistantImpl" />
	<context:component-scan base-package="com.ko.cds" />
	
	
	<mvc:interceptors>
    	<beans:bean class="com.ibm.app.services.interceptor.RESTHandlerInterceptor"/> 
	</mvc:interceptors>
	
	
	
	
	<beans:bean id="applicationContextProvider" class="com.ibm.app.services.appcontext.ApplicationContextProvider"></beans:bean>
	
	
	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <beans:property name="driverClass" value="${jdbc.driverClassName}"/>
        <beans:property name="jdbcUrl" value="${jdbc.url}"/>  
        <beans:property name="user" value="${jdbc.username}"/>
        <beans:property name="password" value="${jdbc.password}"/> 
        <beans:property name="maxPoolSize" value="50"/>
        <beans:property name="initialPoolSize" value="5"/>
        <beans:property name="minPoolSize" value="1"/>
        <beans:property name="maxStatements" value="200"/>
        <beans:property name="acquireIncrement"  value="10"/>
        <beans:property name="idleConnectionTestPeriod" value="10800"/>
        <beans:property name="maxIdleTime" value="21600"/>        
    </beans:bean>
	<!-- *******************************
     ***** CACHE CONFIGURATION *****
    ******************************* -->
    <cache:annotation-driven cache-manager="cacheManager" />         
	<beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
	    <beans:property name="cacheManager" ref="ehcache"/>
	    
	</beans:bean>
	<beans:bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
	    <beans:property name="configLocation" value="classpath:resources/cacheConfig/Ehcache.xml"/>
	    <beans:property name="shared" value="true"/>
	</beans:bean>
	
 <!-- Enabling proxy based transaction -->
	
  <!-- enable the configuration of transactional behavior based on annotations -->
  <tx:annotation-driven transaction-manager="txManager"/>
 <!-- a PlatformTransactionManager is still required -->
  <beans:bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <!-- (this dependency is defined somewhere else) -->
    <beans:property name="dataSource" ref="dataSource"/>
  </beans:bean>
  
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="configLocation" value="classpath:resources/mybatis/sqlmap-config.xml" />
    </beans:bean>
     <beans:bean id="janrainJDBCTemplate" class="com.ko.cds.dao.janrain.JanrainJDBCTemplate">
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>
    <!-- scan for mappers and let them be autowired --> 

	 <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<beans:property name="basePackage" value="com.ko.cds.dao,resources.mybatis" />
	 </beans:bean>
	 


	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="mediaTypes">
	    	<beans:map>
	      		<beans:entry key="json" value="application/json"/>
	      		<beans:entry key="xml" value="application/xml"/>
	    	</beans:map>
	  	</beans:property>
	  	<beans:property name="viewResolvers">
	    	<beans:list>
	    		<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
	    	</beans:list>
	  	</beans:property>
	  	<beans:property name="defaultViews">
	    	<beans:list>
	    		<beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
    			<beans:bean id="xmlViewer" class="org.springframework.web.servlet.view.xml.MarshallingView">
					<beans:constructor-arg>
				  	<beans:bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
						<beans:property name="classesToBeBound">
			            	<beans:list>
			                	<beans:value>com.ibm.app.services.xmlbinding.MemberInfo</beans:value> 
                            </beans:list>
		        		</beans:property>
				  	</beans:bean>
					</beans:constructor-arg>
				</beans:bean>
	    	</beans:list>
	  	</beans:property>
	</beans:bean>
	
	<aop:aspectj-autoproxy/>
	
</beans:beans>

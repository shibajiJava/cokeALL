<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ibm.cocacola.srv</groupId>
  <artifactId>cocacolaSRV</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>cocacolaSRV Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  
    	
  <properties>  
        <spring.version>3.2.5.RELEASE</spring.version>  
        <jdk.version>1.7</jdk.version>  
  </properties>  
    
  <dependencies>
  
  	<dependency>
	    <groupId>net.sf.ehcache</groupId>
	    <artifactId>ehcache</artifactId>
	    <version>2.7.4</version>
	</dependency>
  	
  	<dependency>
		<groupId>com.thoughtworks.xstream</groupId>
		<artifactId>xstream</artifactId>
		<version>1.4.7</version>
	</dependency>
  	
  	<dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
    </dependency>
  	
  
  	<!-- Start Spring Jars -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>  
	      <groupId>org.springframework</groupId>  
	      <artifactId>spring-core</artifactId>  
	      <version>${spring.version}</version>  
	    </dependency>  
	  
	    <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
	  
	    <dependency>  
	       <groupId>org.springframework</groupId>  
	       <artifactId>spring-webmvc</artifactId>  
	       <version>${spring.version}</version>  
	    </dependency>  
	  
	    <dependency>  
	       <groupId>org.springframework</groupId>  
	       <artifactId>spring-jdbc</artifactId>  
	       <version>${spring.version}</version>  
	    </dependency>
	    
	    <dependency>  
	        <groupId>org.springframework</groupId>  
	        <artifactId>spring-context</artifactId>  
	        <version>${spring.version}</version>  
	    </dependency>  
	    
	     <!-- Spring + Quartz need transaction -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
           
		
  	<!-- End Spring Jars -->
  	
  	<!-- Quartz framework -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.6</version>
		</dependency>
		
         <dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>db2-jdbc</artifactId>
			<version>10.2</version>
		</dependency>   
		 <dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.0.4</version>
		</dependency>
            
            
	  	<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.3-1100-jdbc41</version>
		</dependency>
  	
  	<!-- Start Common Jars -->
  	<dependency>
	   <groupId>commons-httpclient</groupId>
	   <artifactId>commons-httpclient</artifactId>
	   <version>3.1</version>
	</dependency>
	
	<dependency>
		<groupId>commons-lang</groupId>
		<artifactId>commons-lang</artifactId>
		<version>2.6</version>
	</dependency>
	
	<dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>1.8</version>
	</dependency>
	
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
	</dependency>
		
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.4</version>
	</dependency>
  	<!-- End Common Jars -->
  	
  	<dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.1.1</version>
	</dependency>
  	<dependency>
		<groupId>xml-apis</groupId>
		<artifactId>xml-apis</artifactId>
		<version>1.4.01</version>
	</dependency>
	
     
    <dependency>
		<groupId>org.opensaml</groupId>
		<artifactId>xmltooling</artifactId>
		<version>1.3.4</version>
	</dependency>
	
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
	</dependency>
	
	<dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>1.7.0</version>
    </dependency>
    <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>1.7.0</version>
    </dependency>
            
 	 
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.5</version>		
	</dependency>
    
    
    
	<dependency>
		<groupId>org.mybatis</groupId>
		<artifactId>mybatis</artifactId>
		<version>3.2.6</version>
	</dependency>
    
    <dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis-spring</artifactId>
	    <version>1.2.2</version>
	</dependency>
    
    <dependency>
        <groupId>com.codahale.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>3.0.1</version>
    </dependency>
    
    
    <dependency>
	   <groupId>javax.mail</groupId>
	   <artifactId>mail</artifactId>
	   <version>1.4.7</version>
	</dependency>
   
   <!-- Jersey + Spring -->
   		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>2.4.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-oxm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
			       <groupId>org.springframework</groupId>  
			       <artifactId>spring-jdbc</artifactId>  
			    </exclusion>
			    <exclusion>
			    	<groupId>org.springframework</groupId>
					<artifactId>spring-jms</artifactId>
			    </exclusion>
			</exclusions>
		</dependency>
            
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>2.4.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>2.4.1</version>	
		</dependency>	
		
		<!-- End jersey+ spring -->
   
    
    
	<dependency>
		<groupId>net.sf.oval</groupId>
		<artifactId>oval</artifactId>
		<version>1.84</version>
	</dependency>
   <dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.1.2</version>
	</dependency>
    <dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-test</artifactId>
	<version>${spring.version}</version>
</dependency>
    
     <dependency>
	<groupId>net.sf.opencsv</groupId>
	<artifactId>opencsv</artifactId>
	<version>2.3</version>
	</dependency>
	
	 <dependency>
        <groupId>com.codahale.metrics</groupId>
        <artifactId>metrics-servlets</artifactId>
        <version>3.0.1</version>
    </dependency>
    
    <dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20090211</version>
	</dependency>
	
	
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache-jgroupsreplication</artifactId>
		<version>1.7</version>
	</dependency>
	
	<!-- jmelody Start -->
	
	 <!-- javamelody-core -->
        <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-core</artifactId>
                <version>1.51.0</version>
        </dependency>
        <!-- itext, option to add PDF export -->
        <dependency>
                <groupId>com.lowagie</groupId>
                <artifactId>itext</artifactId>
                <version>2.1.7</version>
                <exclusions>
                        <exclusion>
                                <artifactId>bcmail-jdk14</artifactId>
                                <groupId>bouncycastle</groupId>
                        </exclusion>
                        <exclusion>
                                <artifactId>bcprov-jdk14</artifactId>
                                <groupId>bouncycastle</groupId>
                        </exclusion>
                        <exclusion>
                                <artifactId>bctsp-jdk14</artifactId>
                                <groupId>bouncycastle</groupId>
                        </exclusion>
                </exclusions>
        </dependency>

        <dependency>
                <groupId>org.jrobin</groupId>
                <artifactId>jrobin</artifactId>
                <version>1.5.9</version>
        </dependency>
	<!-- jmelody end -->
	
	
	<dependency>
	  <groupId>commons-dbcp</groupId>
	  <artifactId>commons-dbcp</artifactId>
	  <version>1.4</version>
	</dependency>
  </dependencies>
  
     
    <build>
		  
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		            <plugin>  
		                <!-- <artifactId>maven-antrun-plugin</artifactId>   -->
		              <groupId>org.apache.tomcat.maven</groupId>
				        <artifactId>tomcat7-maven-plugin</artifactId>
				        <version>2.2</version>
		                <executions>
		             <execution>
		               <configuration>  
		                  <path>/cocacolaSRV</path>
				            <url>http://localhost:8080/manager/text</url>
				            <server>localServer</server>
		                    <tasks>
		                     <!-- deleting the unwanted files -->
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>		                  
                                <!-- <copy file="C:\TheCocaColaCompany\EclipseProject\SourceTreeCDS\WSMerge\cocacolaSRV\target\cocacolaSRV.war" tofile="C:\TheCocaColaCompany\EclipseProject\SourceTreeCDS\WSMerge\cocacolaSRV\target\cocacolaSRV-1.war" /> -->
                            </tasks>
					</configuration>
					</execution>
					</executions>
		            </plugin>  
		            <plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		            </plugin> 
		         </plugins>  
		        <resources>
		        <resource>
		            <directory>src/main</directory>
		            <filtering>true</filtering>
		            <includes>
		                <include>**/*.xml</include>
		                <include>**/*.properties</include>
		                <include>**/*.txt</include>
		            </includes>
		          </resource>
		        </resources>
		        
		  </build>
   
  <profiles>
   <profile>
     <id>test</id> 
		  <build>
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		    	<plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		        </plugin> 
		        <plugin>  
		        	<artifactId>maven-antrun-plugin</artifactId>  
		            <executions>
		            	<execution>
		              	<!--  <phase>test</phase> -->
		               <!-- changing the phase to integration-test so that the war is copied after the war file has got created. -->
		               <phase>test</phase>
		               <goals>
		                 <goal>run</goal>
		               </goals>
		               <configuration>
		               		<path>/cocacolaSRV</path>
		                    <tasks>
			                  	<delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/> 
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
			                   
			                   <copy file="src/main/resources/ConfigurationProp/configuration.test.properties"
			                         tofile="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
							
							<copy file="src/main/resources/cacheConfig/Ehcache.test.xml"
		                         tofile="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
			                         
			                   <copy file="src/main/resources/junit/jdbc.test.properties"
			                         tofile="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
	
			                   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                  
			                   <copy file="src/main/resources/logback.test.xml"
			                         tofile="${project.build.outputDirectory}/resources/logback.xml"/>
			                         
			                   <copy file="src/main/resources/logback.test.xml"
			                         tofile="${project.build.outputDirectory}/logback.xml"/>
			                  
			                   <copy file="src/main/webapp/WEB-INF/spring/root-context.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
			                   
			                   <copy file="src/main/webapp/WEB-INF/web.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/>
			                         
			                  <!--  <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"
			                         tofile="/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                    <copy file="src/main/webapp/WEB-INF/spring/root-context.test.xml"
			                         tofile="/WEB-INF/spring/root-context.xml"/> -->
			                    
			                    <!-- deleting the unwanted files -->
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.testCL1.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>			                    
		                    <!-- copying the war file to another location -->
		               		<!-- <copy file="/var/lib/jenkins/jobs/Coke - Test Build/workspace/cocacolaSRV/target/cocacolaSRV.war" tofile="/opt/tomcat7/cocacolaSRV-test.war" /> -->
			                 </tasks> 
		               </configuration>
		             </execution>
		           </executions>
		       </plugin>  
		       <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
	                  	<webResources>
							<resource>
								<directory>${project.build.outputDirectory}/webapp/WEB-INF</directory>
								<!-- override default destination at root of war -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
						<warSourceExcludes>WEB-INF/web.*.xml,WEB-INF/spring/root-context.*.xml,WEB-INF/spring/appServlet/servlet-context.*.xml, </warSourceExcludes>
				  	</configuration>
                </plugin>
		        </plugins>  
		  </build>
   	</profile>
   	 <profile>
     <id>testCL1</id> 
		  <build>
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		    	<plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		        </plugin> 
		        <plugin>  
		        	<artifactId>maven-antrun-plugin</artifactId>  
		            <executions>
		            	<execution>
		              	<!--  <phase>test</phase> -->
		               <!-- changing the phase to integration-test so that the war is copied after the war file has got created. -->
		               <phase>test</phase>
		               <goals>
		                 <goal>run</goal>
		               </goals>
		               <configuration>
		               		<path>/cocacolaSRV</path>
		                    <tasks>
			                  	<delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/> 
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
			                   
			                   <copy file="src/main/resources/ConfigurationProp/configuration.testCL1.properties"
			                         tofile="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
							
							<copy file="src/main/resources/cacheConfig/Ehcache.testCL1.xml"
		                         tofile="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
			                         
			                   <copy file="src/main/resources/junit/jdbc.test.properties"
			                         tofile="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
	
			                   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                  
			                   <copy file="src/main/resources/logback.testCL1.xml"
			                         tofile="${project.build.outputDirectory}/resources/logback.xml"/>
			                         
			                   <copy file="src/main/resources/logback.testCL1.xml"
			                         tofile="${project.build.outputDirectory}/logback.xml"/>
			                  
			                   <copy file="src/main/webapp/WEB-INF/spring/root-context.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
			                   
			                   <copy file="src/main/webapp/WEB-INF/web.test.xml"
			                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/>
			                         
			                  <!--  <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"
			                         tofile="/WEB-INF/spring/appServlet/servlet-context.xml"/>
			                    <copy file="src/main/webapp/WEB-INF/spring/root-context.test.xml"
			                         tofile="/WEB-INF/spring/root-context.xml"/> -->
			                    
			                    <!-- deleting the unwanted files -->
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.testCL1.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.testCL1.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
			                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>	
			                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.testCL1.xml"/>			                    
		                    <!-- copying the war file to another location -->
		               		<!-- <copy file="/var/lib/jenkins/jobs/Coke - Test Build/workspace/cocacolaSRV/target/cocacolaSRV.war" tofile="/opt/tomcat7/cocacolaSRV-test.war" /> -->
			                 </tasks> 
		               </configuration>
		             </execution>
		           </executions>
		       </plugin>  
		       <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
	                  	<webResources>
							<resource>
								<directory>${project.build.outputDirectory}/webapp/WEB-INF</directory>
								<!-- override default destination at root of war -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
						<warSourceExcludes>WEB-INF/web.*.xml,WEB-INF/spring/root-context.*.xml,WEB-INF/spring/appServlet/servlet-context.*.xml, </warSourceExcludes>
				  	</configuration>
                </plugin>
		        </plugins>  
		  </build>
   	</profile>
   	<profile>
     <id>production</id> 
		  <build>
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		    		            <plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		            </plugin> 
		             <plugin>  
		                  <artifactId>maven-antrun-plugin</artifactId>  
		                 <executions>
		             <execution>
		              <!--  <phase>test</phase> -->
		                <!-- changing the phase to integration-test so that the war is copied after the war file has got created. -->
		               <phase>test</phase>
		               <goals>
		                 <goal>run</goal>
		               </goals>
		               <configuration>
		                    <path>/cocacolaSRV</path>
		                 <tasks>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/> 
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
		                   
		                   <copy file="src/main/resources/ConfigurationProp/configuration.production.properties"
		                         tofile="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>

		                   <copy file="src/main/resources/cacheConfig/Ehcache.production.xml"
		                         tofile="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
		                         
		                   <copy file="src/main/resources/junit/jdbc.production.properties"
		                         tofile="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>

		                   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
		               
		                   <copy file="src/main/resources/logback.production.xml"
		                         tofile="${project.build.outputDirectory}/resources/logback.xml"/>
		                         
		                   <copy file="src/main/resources/logback.production.xml"
		                         tofile="${project.build.outputDirectory}/logback.xml"/>
		                  
		                   <copy file="src/main/webapp/WEB-INF/spring/root-context.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
		                  
		                   <copy file="src/main/webapp/WEB-INF/web.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/>
		                            
		                 <!--   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"
		                         tofile="/WEB-INF/spring/appServlet/servlet-context.xml"/>
		                    <copy file="src/main/webapp/WEB-INF/spring/root-context.production.xml"
		                         tofile="/WEB-INF/spring/root-context.xml"/> -->

							<!-- deleting the unwanted files -->
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.testCL1.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
		                    <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/> 
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>
		                    <!-- copying the war file to another location -->
		               		<!-- <copy file="/var/lib/jenkins/jobs/Coke -Production Build/workspace/cocacolaSRV/target/cocacolaSRV.war" tofile="/opt/tomcat7/cocacolaSRV-production.war" />
 -->
		                 </tasks>
		               </configuration>
		             </execution>
		           </executions>
		         </plugin>
		         <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
	                  	<webResources>
							<resource>
								<directory>${project.build.outputDirectory}/webapp/WEB-INF</directory>
								<!-- override default destination at root of war -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
						<warSourceExcludes>WEB-INF/web.*.xml,WEB-INF/spring/root-context.*.xml,WEB-INF/spring/appServlet/servlet-context.*.xml, </warSourceExcludes>
				  	</configuration>
                </plugin>
		        </plugins>  
		  </build>
   	</profile>
   	<profile>
     <id>productionCL1</id> 
		  <build>
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		    		            <plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		            </plugin> 
		             <plugin>  
		                  <artifactId>maven-antrun-plugin</artifactId>  
		                 <executions>
		             <execution>
		              <!--  <phase>test</phase> -->
		                <!-- changing the phase to integration-test so that the war is copied after the war file has got created. -->
		               <phase>test</phase>
		               <goals>
		                 <goal>run</goal>
		               </goals>
		               <configuration>
		                    <path>/cocacolaSRV</path>
		                 <tasks>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/> 
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
		                   
		                   <copy file="src/main/resources/ConfigurationProp/configuration.production.properties"
		                         tofile="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
 						
 						<copy file="src/main/resources/cacheConfig/Ehcache.productionCL1.xml"
		                         tofile="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>

		                         
		                   <copy file="src/main/resources/junit/jdbc.production.properties"
		                         tofile="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>

		                   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
		               
		                   <copy file="src/main/resources/logback.productionCL1.xml"
		                         tofile="${project.build.outputDirectory}/resources/logback.xml"/>
		                         
		                   <copy file="src/main/resources/logback.productionCL1.xml"
		                         tofile="${project.build.outputDirectory}/logback.xml"/>
		                  
		                   <copy file="src/main/webapp/WEB-INF/spring/root-context.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
		                  
		                   <copy file="src/main/webapp/WEB-INF/web.production.xml"
		                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/>
		                            
		                 <!--   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"
		                         tofile="/WEB-INF/spring/appServlet/servlet-context.xml"/>
		                    <copy file="src/main/webapp/WEB-INF/spring/root-context.production.xml"
		                         tofile="/WEB-INF/spring/root-context.xml"/> -->

							<!-- deleting the unwanted files -->
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.testCL1.properties"/> 
		                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
		                    <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
		                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/> 
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
		                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>
		                    <!-- copying the war file to another location -->
		               		<!-- <copy file="/var/lib/jenkins/jobs/Coke -Production Build/workspace/cocacolaSRV/target/cocacolaSRV.war" tofile="/opt/tomcat7/cocacolaSRV-production.war" />
 -->
		                 </tasks>
		               </configuration>
		             </execution>
		           </executions>
		         </plugin>
		         <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
	                  	<webResources>
							<resource>
								<directory>${project.build.outputDirectory}/webapp/WEB-INF</directory>
								<!-- override default destination at root of war -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
						<warSourceExcludes>WEB-INF/web.*.xml,WEB-INF/spring/root-context.*.xml,WEB-INF/spring/appServlet/servlet-context.*.xml, </warSourceExcludes>
				  	</configuration>
                </plugin>
		        </plugins>  
		  </build>
   	</profile>
   	<profile>
     <id>dev</id> 
		  <build>
		    <finalName>cocacolaSRV</finalName>
		    <plugins>  
		    		  <plugin>  
		                <groupId>org.apache.maven.plugins</groupId>  
		                <artifactId>maven-compiler-plugin</artifactId>  
		                <version>3.0</version>  
		                <configuration>  
		                    <source>${jdk.version}</source>  
		                    <target>${jdk.version}</target>  
		                </configuration>  
		            </plugin> 
		            <plugin>  
		            	<artifactId>maven-antrun-plugin</artifactId>  
		            	<executions>
		             	   <execution>
			               <phase>test</phase>
			               <goals>
			               		<goal>run</goal>
			               </goals>
			               <configuration>
			                    <path>/cocacolaSRV</path>
			                    <tasks>
				                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/logback.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/> 
				                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
				                   
				                   <copy file="src/main/resources/ConfigurationProp/configuration.dev.properties"
				                         tofile="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.properties"/>
									
								<copy file="src/main/resources/cacheConfig/Ehcache.dev.xml"
		                         			tofile="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.xml"/>
				                         
				                   <copy file="src/main/resources/junit/jdbc.dev.properties"
				                         tofile="${project.build.outputDirectory}/resources/junit/jdbc.properties"/>
		
				                   <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"
				                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.xml"/>
				                  
				                   <copy file="src/main/resources/logback.dev.xml"
				                         tofile="${project.build.outputDirectory}/resources/logback.xml"/>
				                         
				                   <copy file="src/main/resources/logback.dev.xml"
				                         tofile="${project.build.outputDirectory}/logback.xml"/>
				                  
				                   <copy file="src/main/webapp/WEB-INF/spring/root-context.dev.xml"
				                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.xml"/>
				                         
				                   <copy file="src/main/webapp/WEB-INF/web.dev.xml"
				                         tofile="${project.build.outputDirectory}/webapp/WEB-INF/web.xml"/>
				                
		                 <!-- <copy file="src/main/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"
		                         tofile="${project.build}/WEB-INF/spring/appServlet/servlet-context.xml"/>   
						  <copy file="src/main/webapp/WEB-INF/spring/root-context.dev.xml"
		                         tofile="${project.build}/WEB-INF/spring/root-context.xml"/> -->
				                   
				                   <!-- deleting the unwanted files -->
				                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.production.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.test.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.testCL1.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/ConfigurationProp/configuration.dev.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.production.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.test.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/junit/jdbc.dev.properties"/>
				                   <delete file="${project.build.outputDirectory}/resources/logback.production.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/logback.productionCL1.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/logback.test.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/logback.dev.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.production.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.test.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/root-context.dev.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.production.xml"/>   
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.test.xml"/>
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/spring/appServlet/servlet-context.dev.xml"/> 
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.production.xml"/> 
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.test.xml"/> 
				                   <delete file="${project.build.outputDirectory}/webapp/WEB-INF/web.dev.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.dev.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.production.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.productionCL1.xml"/>
				                   <delete file="${project.build.outputDirectory}/resources/cacheConfig/Ehcache.test.xml"/>				                   
		                    <!-- copying the war file to another location -${maven.build.timestamp}-->
		               		<!-- <copy file="/var/lib/jenkins/jobs/Coke-Dev Build/workspace/cocacolaSRV/target/cocacolaSRV.war" tofile="/opt/tomcat7/cocacolaSRV-dev.war" /> -->
			              		</tasks>
			               </configuration>
			             </execution>
		           </executions>
		         </plugin>
		         <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
	                  	<webResources>
							<resource>
								<directory>${project.build.outputDirectory}/webapp/WEB-INF</directory>
								<!-- override default destination at root of war -->
								<targetPath>WEB-INF</targetPath>
							</resource>
						</webResources>
						<warSourceExcludes>WEB-INF/web.*.xml,WEB-INF/spring/root-context.*.xml,WEB-INF/spring/appServlet/servlet-context.*.xml, </warSourceExcludes>
				  	</configuration>
                </plugin>
		        </plugins>  
      
		  </build>
   	</profile>
   </profiles>
</project>
